{"version":3,"sources":["logo.svg","features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setburgerStatus","useSelector","console","log","Container","href","src","MenuGroup","map","index","RightMenu","MenuIconContainer","onClick","BurgerNav","show","CloseContainer","styled","div","props","Close","CloseIcon","Section","bgImage","backgroundImg","bottom","ItemText","title","description","Buttons","ButtonGroup","LeftButton","leftButtonText","rightButtonText","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c2aad37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n\tcars: [ \"Model S\", \"Model 3\", \"Model X\", \"Model Y\" ]\r\n};\r\n\r\nconst carSlice = createSlice({\r\n\tname: \"car\",\r\n\tinitialState,\r\n\treducers: {}\r\n});\r\n\r\nexport const selectCars = state => state.car.cars;\r\n\r\nexport default carSlice.reducer;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { selectCars } from '../features/car/carSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction Header() {\r\n\r\n\tconst [burgerStatus, setburgerStatus] = useState(false);\r\n\tconst cars = useSelector(selectCars);\r\n\tconsole.log(cars);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<a href=\"#\">\r\n\t\t\t\t<img src=\"/images/logo.svg\" />\r\n\t\t\t</a>\r\n\t\t\t<MenuGroup>\r\n\t\t\t\t{ cars && cars.map((car, index) => (\r\n\t\t\t\t\t<a key={index} href=\"#\">{car}</a>\r\n\t\t\t\t)) }\r\n\t\t\t</MenuGroup>\r\n\t\t\t<RightMenu>\r\n\t\t\t\t<a href=\"#\">Shop</a>\r\n\t\t\t\t<a href=\"#\">Tesla Account</a>\r\n\t\t\t\t<MenuIconContainer onClick={() => setburgerStatus(true)}>\r\n\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t</MenuIconContainer>\r\n\t\t\t</RightMenu>\r\n\t\t\t<BurgerNav show={burgerStatus}>\r\n\t\t\t\t<CloseContainer>\r\n\t\t\t\t\t<Close onClick={() => setburgerStatus(false)}/>\r\n\t\t\t\t</CloseContainer>\r\n\t\t\t\t{ cars && cars.map((car, index) => (\r\n\t\t\t\t\t<li key={index}><a href=\"#\">{car}</a></li>\r\n\t\t\t\t)) }\r\n\t\t\t\t<li><a href=\"#\">Existing inventory</a></li>\r\n\t\t\t\t<li><a href=\"#\">Used inventory</a></li>\r\n\t\t\t\t<li><a href=\"#\">Trade-in</a></li>\r\n\t\t\t\t<li><a href=\"#\">Cybertruck</a></li>\r\n\t\t\t\t<li><a href=\"#\">Roadster</a></li>\r\n\t\t\t\t<li><a href=\"#\">Semi</a></li>\r\n\t\t\t\t<li><a href=\"#\">Charging</a></li>\r\n\t\t\t</BurgerNav>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Header;\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tmin-height: 60px;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tpadding: 0 20px;\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tz-index: 10;\r\n`;\r\n\r\nconst MenuGroup = styled.div`\r\n\tdisplay: flex;\r\n\ttext-transform: uppercase;\r\n\ta {\r\n\t\tfont-weight: 600;\r\n\t\tpadding: 0 10px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t@media(max-width: 768px) {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst RightMenu = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\ta {\r\n\t\tfont-weight: 600;\r\n\t\ttext-transform: uppercase;\r\n\t\tpadding-right: 10px;\r\n\t}\r\n`;\r\n\r\nconst MenuIconContainer = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst BurgerNav = styled.div`\r\n\tposition: fixed;\r\n\twidth: 300px;\r\n\tbackground-color: white;\r\n\ttop:0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tpadding: 20px;\r\n\tlist-style: none;\r\n\ttransform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)' };\r\n\ttransition: transform 0.2s ease-in;\r\n\tli {\r\n\t\tpadding: 15px 0;\r\n\t\tborder-bottom: 1px solid rgba(0, 0, 0, .2);\r\n\t\ta {\r\n\t\t\tfont-weight: 600;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CloseContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n`;\r\n\r\nconst Close = styled(CloseIcon)`\r\n\tcursor: pointer;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nfunction Section(props) {\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<Container bgImage={props.backgroundImg}>\r\n\t\t\t<Fade bottom>\r\n\t\t\t\t<ItemText>\r\n\t\t\t\t\t<h1>{ props.title }</h1>\r\n\t\t\t\t\t<p>{ props.description }</p>\r\n\t\t\t\t</ItemText>\r\n\t\t\t</Fade>\r\n\t\t\t<Buttons>\r\n\t\t\t\t<Fade bottom>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<LeftButton>{ props.leftButtonText }</LeftButton>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.rightButtonText && <RightButton>{ props.rightButtonText }</RightButton>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Fade>\r\n\t\t\t\t<DownArrow src=\"/images/down-arrow.svg\" />\r\n\t\t\t</Buttons>\r\n\t\t\t\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Section;\r\n\r\nconst Container = styled.div`\r\n\tbackground-color: blue;\r\n\twidth: 100%;\r\n\theight: 100vh;\r\n\tbackground-image: ${props => `url('/images/${props.bgImage}')`};\r\n\tbackground-position: center;\r\n\tbackground-size: cover;\r\n\tbackground-repeat: no-repeat;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst ItemText = styled.div`\r\n\tpadding-top: 15vh;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-bottom: 30px;\r\n\t@media(max-width: 768px) {\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n\r\nconst LeftButton = styled.div`\r\n\tbackground-color: rgba(23, 26, 32, 0.8);\r\n\theight: 40px;\r\n\twidth: 256px;\r\n\tborder-radius: 100px;\r\n\tcolor: white;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\ttext-transform: uppercase;\r\n\tfont-size: 12px;\r\n\topacity: 0.85;\r\n\tmargin: 8px;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst RightButton = styled(LeftButton)`\r\n\tbackground-color: white;\r\n\tcolor: black;\r\n\topacity: 0.65;\r\n`;\r\n\r\nconst DownArrow = styled.img`\r\n\theight: 40px;\r\n\tanimation: animateDown infinite 1.5s;\r\n\tmargin-bottom: 50px;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n\ttext-align: center;\r\n`;","import React from 'react';\r\nimport Section from './Section';\r\nimport styled from 'styled-components'\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Model S\"\r\n\t\t\t\tdescription=\"Order Online for Touchless Delivery\"\r\n\t\t\t\tbackgroundImg=\"model-s.jpg\"\r\n\t\t\t\tleftButtonText=\"Custom order\"\r\n\t\t\t\trightButtonText=\"Existing inventory\"\r\n\t\t\t/>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Model Y\"\r\n\t\t\t\tdescription=\"Order Online for Touchless Delivery\"\r\n\t\t\t\tbackgroundImg=\"model-y.jpg\"\r\n\t\t\t\tleftButtonText=\"Custom order\"\r\n\t\t\t\trightButtonText=\"Existing inventory\"\r\n\t\t\t/>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Model 3\"\r\n\t\t\t\tdescription=\"Order Online for Touchless Delivery\"\r\n\t\t\t\tbackgroundImg=\"model-3.jpg\"\r\n\t\t\t\tleftButtonText=\"Custom order\"\r\n\t\t\t\trightButtonText=\"Existing inventory\"\r\n\t\t\t/>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Model X\"\r\n\t\t\t\tdescription=\"Order Online for Touchless Delivery\"\r\n\t\t\t\tbackgroundImg=\"model-x.jpg\"\r\n\t\t\t\tleftButtonText=\"Custom order\"\r\n\t\t\t\trightButtonText=\"Existing inventory\"\r\n\t\t\t/>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Lowest Cost Solar Panels in America\"\r\n\t\t\t\tdescription=\"Money-back gurantee\"\r\n\t\t\t\tbackgroundImg=\"solar-panel.jpg\"\r\n\t\t\t\tleftButtonText=\"Order now\"\r\n\t\t\t\trightButtonText=\"Learn more\"\r\n\t\t\t/>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Solar for New Roofs\"\r\n\t\t\t\tdescription=\"Solar Roof Costs Less Than a new Roofs\"\r\n\t\t\t\tbackgroundImg=\"solar-roof.jpg\"\r\n\t\t\t\tleftButtonText=\"Order now\"\r\n\t\t\t\trightButtonText=\"Learn more\"\r\n\t\t\t/>\r\n\t\t\t<Section \r\n\t\t\t\ttitle=\"Accessories\"\r\n\t\t\t\tdescription=\"\"\r\n\t\t\t\tbackgroundImg=\"accessories.jpg\"\r\n\t\t\t\tleftButtonText=\"Shop now\"\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\nconst Container = styled.div`\r\n\theight: 100vh;\r\n`;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from \"../features/car/carSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}